
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Main {
    private static JFrame frame;
    private static JTextField userTry;
    private static JLabel output;
    private static int price;
    private static int attempts;
    private static final int maxAttempts = 15;
    private static boolean isPlaying;

    public static void main(String[] args) {
        frame = new JFrame("Guessing game with UI");
        frame.setSize(4000, 1600);
        frame.setLayout(new GridLayout(5, 1));

        JLabel intro = new JLabel("Welcome to the guessing game! Enter a number and I'll tell you.");
        JLabel introV1 = new JLabel("whether it is higher or lower compared to the one I have in mind.");
        JLabel introV2 = new JLabel("You can give up if you type 'I am a quitter'. BTW you have limited guesses :)");
        intro.setFont(new Font("Oswald", Font.PLAIN, 40));
        frame.add(intro);
        introV1.setFont(new Font("Oswald", Font.PLAIN, 40));
        frame.add(introV1);
        introV2.setFont(new Font("Oswald", Font.PLAIN, 40));
        frame.add(introV2);

        userTry = new JTextField("0", 10);
        userTry.setFont(new Font("Oswald", Font.PLAIN, 40));
        JPanel interactive = new JPanel(new FlowLayout());
        interactive.add(userTry);

        JButton check = new JButton("Check");
        interactive.add(check);
        JButton reset = new JButton("Reset");
        interactive.add(reset);

        Layoutset(check);
        Layoutset(reset);

        frame.add(interactive);

        output = new JLabel("Feedback");
        output.setFont(new Font("Oswald", Font.PLAIN, 40));
        frame.add(output);

        frame.setVisible(true);

        startNewGame();

        check.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String input = userTry.getText();

                if (isPlaying) {
                    if (input.equals("I am a quitter")) {
                        output.setText("Hah quitter, it was " + price + " gg, try another time");
                        isPlaying = false;
                        return;
                    }
                        int guess = Integer.parseInt(input);
                        attempts++;

                        if (guess == price) {
                            output.setText("Congratulations! You guessed it in " + attempts + " attempts.");
                            isPlaying = false;
                        } else if (guess < price && Math.abs(price - guess) > 100) {
                            output.setText(guess + " is too low! At least like 100");
                        } else if (guess > price && Math.abs(price - guess) > 100) {
                            output.setText(guess + " is too high! At least like 100");
                        } else if (guess < price && Math.abs(price - guess) < 100) {
                            output.setText(guess + " is low, but you are within 100!");
                        } else if (guess > price && Math.abs(price - guess) < 100) {
                            output.setText(guess + " is high, but you are within 100!");
                        }

                        if (attempts >= maxAttempts && guess != price) {
                            output.setText("I told you you had limited attempts, greed leads you nowhere, it was " + price + ".");
                            attempts = 0;
                            isPlaying = false;
                        }


                }
            }
        });

        reset.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                startNewGame();
            }
        });
    }

    // Start a new game, setting the price, resetting attempts, and updating the output.
    public static void startNewGame() {
        price = (int) Math.floor(Math.random() * 1000);
        attempts = 0;
        isPlaying = true;
        userTry.setText("0");
        output.setText("Feedback");
    }

    public static void Layoutset(JButton button) {
        button.setFont(new Font("Arial", Font.BOLD, 40));
        button.setForeground(Color.BLACK);
        button.setBorderPainted(false);
        button.setContentAreaFilled(false);
        button.setFocusPainted(false);
    }
}
